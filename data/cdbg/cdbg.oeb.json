
{
    "credit": [
        {
            "email": "enno.ohlebusch@uni-ulm.de",
            "name": "Dr. Enno Ohlebusch",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ],
            "url": "https://www.uni-ulm.de/en/in/institute-of-theoretical-computer-science.html"
        }
    ],
    "documentation": [
        {
            "type": "General",
            "url": "https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btv603"
        }
    ],
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                }
            ]
        }
    ],
    "labels": {
        "language": [
            "C++"
        ],
        "operatingSystem": [
            "Linux"
        ],
        "toolType": [
            "Command-line tool"
        ],
        "topic": [
            {
                "term": "DNA",
                "uri": "http://edamontology.org/topic_0654"
            },
            {
                "term": "Data visualisation",
                "uri": "http://edamontology.org/topic_0092"
            },
            {
                "term": "Statistics and probability",
                "uri": "http://edamontology.org/topic_2269"
            }
        ]
    },
    "link": [
        {
            "type": "Software catalogue",
            "url": "http://www.mybiosoftware.com/cdbg-tools-for-computing-compressed-debruijn-graph.html"
        }
    ],
    "publication": [
        {
            "abstract": "© 2015 The Author 2015. Published by Oxford University Press. All rights reserved. Motivation: Low-cost genome sequencing gives unprecedented complete information about the genetic structure of populations, and a population graph captures the variations between many individuals of a population. Recently, Marcus et al. proposed to use a compressed de Bruijn graph for representing an entire population of genomes. They devised an O(nlogg) time algorithm called splitMEM that constructs this graph directly (i.e. without using the uncompressed de Bruijn graph) based on a suffix tree, where n is the total length of the genomes and g is the length of the longest genome. Since the applicability of their algorithm is limited to rather small datasets, there is a strong need for space-efficient construction algorithms. Results: We present two algorithms that outperform splitMEM in theory and in practice. The first implements a novel linear-time suffix tree algorithm by means of a compressed suffix tree. The second algorithm uses the Burrows-Wheeler transform to build the compressed de Bruijn graph in O(nlogσ) time, where σ is the size of the alphabet. To demonstrate the scalability of the algorithms, we applied it to seven human genomes. Availability and implementation: https://www.uni-Ulm.de/in/theo/research/seqana/. Supplementary information: Supplementary data are available at Bioinformatics online.",
            "authors": [
                "Baier U.",
                "Beller T.",
                "Ohlebusch E."
            ],
            "cit_count": 12,
            "journal": "Bioinformatics",
            "pmid": "26504144",
            "title": "Graphical pan-genome analysis with compressed suffix trees and the Burrows-Wheeler transform",
            "year": "2015-09-15"
        }
    ],
    "summary": {
        "biotoolsCURIE": "biotools:cdbg",
        "biotoolsID": "cdbg",
        "description": "Compressed deBruijn Graph are tools for computing the compressed deBruijn Graph.",
        "homepage": "https://www.uni-ulm.de/en/in/institute-of-theoretical-computer-science/research/seqana.html",
        "name": "cdbg"
    }
}