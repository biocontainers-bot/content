
{
    "credit": [
        {
            "email": "vsochat@stanford.edu",
            "name": "Vanessa V. Sochat",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ]
        }
    ],
    "documentation": [
        {
            "type": "General",
            "url": "https://github.com/singularityhub/singularityhub.github.io/wiki"
        }
    ],
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                }
            ]
        }
    ],
    "labels": {
        "operatingSystem": [
            "Linux",
            "Windows",
            "Mac"
        ],
        "toolType": [
            "Web application"
        ],
        "topic": [
            {
                "term": "Simulation experiment",
                "uri": "http://edamontology.org/topic_3524"
            }
        ]
    },
    "publication": [
        {
            "abstract": "© 2017 Sochat et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited. Here we present Singularity Hub, a framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers. Singularity containers make it possible for scientists and developers to package reproducible software, and Singularity Hub adds automation to this workflow by building, capturing metadata for, visualizing, and serving containers programmatically. Our novel metrics, based on custom filters of content hashes of container contents, allow for comparison of an entire container, including operating system, custom software, and metadata. First we will review Singularity Hub’s primary use cases and how the infrastructure has been designed to support modern, common workflows. Next, we conduct three analyses to demonstrate build consistency, reproducibility metric and performance and interpretability, and potential for discovery. This is the first effort to demonstrate a rigorous assessment of measurable similarity between containers and operating systems. We provide these capabilities within Singularity Hub, as well as the source software singularity-python that provides the underlying functionality. Singularity Hub is available at https://singularity-hub.org, and we are excited to provide it as an openly available platform for building, and deploying scientific containers.",
            "authors": [
                "Sochat V.V.",
                "Prybol C.J.",
                "Kurtzer G.M."
            ],
            "cit_count": 2,
            "doi": "10.1371/journal.pone.0188511",
            "journal": "PLoS ONE",
            "title": "Enhancing reproducibility in scientific computing: Metrics and registry for Singularity containers",
            "type": "Primary",
            "year": "2017-11-01"
        }
    ],
    "summary": {
        "biotoolsCURIE": "biotools:singularity_hub",
        "biotoolsID": "singularity_hub",
        "description": "Framework to build and deploy Singularity containers for mobility of compute, and the singularity-python software with novel metrics for assessing reproducibility of such containers.",
        "homepage": "https://singularity-hub.org/",
        "name": "Singularity Hub"
    }
}