
{
    "credit": [
        {
            "email": "sebastian.deorowicz@polsl.pl",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ],
            "url": "http://sun.aei.polsl.pl/REFRESH/index.php?page=home"
        }
    ],
    "documentation": [
        {
            "type": "General",
            "url": "http://sun.aei.polsl.pl/REFRESH/index.php?page=projects&project=kmc&subpage=about"
        }
    ],
    "function": [
        {
            "operation": [
                {
                    "term": "k-mer counting",
                    "uri": "http://edamontology.org/operation_3472"
                }
            ]
        }
    ],
    "labels": {
        "language": [
            "C++"
        ],
        "operatingSystem": [
            "Linux",
            "Windows",
            "Mac"
        ],
        "toolType": [
            "Command-line tool"
        ],
        "topic": [
            {
                "term": "Whole genome sequencing",
                "uri": "http://edamontology.org/topic_3673"
            },
            {
                "term": "Genomics",
                "uri": "http://edamontology.org/topic_0622"
            },
            {
                "term": "Sequence assembly",
                "uri": "http://edamontology.org/topic_0196"
            }
        ]
    },
    "link": [
        {
            "type": "Software catalogue",
            "url": "http://www.mybiosoftware.com/kmc-2-1-k-mer-counter.html"
        }
    ],
    "publication": [
        {
            "abstract": "© The Author 2015. Published by Oxford University Press. Motivation: Building the histogram of occurrences of every k-symbol long substring of nucleotide data is a standard step in many bioinformatics applications, known under the name of k-mer counting. Its applications include developing de Bruijn graph genome assemblers, fast multiple sequence alignment and repeat detection. The tremendous amounts of NGS data require fast algorithms for k-mer counting, preferably using moderate amounts of memory. Results: We present a novel method for k-mer counting, on large datasets about twice faster than the strongest competitors (Jellyfish 2, KMC 1), using about 12∈GB (or less) of RAM. Our disk-based method bears some resemblance to MSPKmerCounter, yet replacing the original minimizers with signatures (a carefully selected subset of all minimizers) and using (k, x)-mers allows to significantly reduce the I/O and a highly parallel overall architecture allows to achieve unprecedented processing speeds. For example, KMC 2 counts the 28-mers of a human reads collection with 44-fold coverage (106∈GB of compressed size) in about 20∈min, on a 6-core Intel i7 PC with an solid-state disk.",
            "authors": [
                "Deorowicz S.",
                "Kokot M.",
                "Grabowski S.",
                "Debudaj-Grabysz A."
            ],
            "cit_count": 75,
            "journal": "Bioinformatics",
            "pmid": "25609798",
            "title": "KMC 2: Fast and resource-frugal k-mer counting",
            "year": "2015-01-01"
        }
    ],
    "summary": {
        "biotoolsCURIE": "biotools:kmc",
        "biotoolsID": "kmc",
        "description": "KMC is a utility designed for counting k-mers (sequences of consecutive k symbols) in a set of reads from genome sequencing projects.",
        "homepage": "http://sun.aei.polsl.pl/REFRESH/index.php?page=projects&project=kmc&subpage=about",
        "name": "KMC"
    }
}