
{
    "credit": [
        {
            "name": "ugent.be",
            "typeEntity": "Institute",
            "typeRoles": [
                "Provider"
            ]
        },
        {
            "email": "jan.fostier@intec.ugent.be",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ]
        }
    ],
    "documentation": [
        {
            "type": "General",
            "url": "https://halvade.readthedocs.io/en/latest/"
        }
    ],
    "function": [
        {
            "input": [
                {
                    "data": {
                        "term": "Sequence set",
                        "uri": "http://edamontology.org/data_0850"
                    }
                }
            ],
            "operation": [
                {
                    "term": "Sequence analysis",
                    "uri": "http://edamontology.org/operation_2403"
                }
            ],
            "output": [
                {
                    "data": {
                        "term": "Sequence variations",
                        "uri": "http://edamontology.org/data_3498"
                    }
                }
            ]
        }
    ],
    "labels": {
        "collectionID": [
            "BIG N2N",
            "UGent"
        ],
        "license": "GPL-3.0",
        "operatingSystem": [
            "Linux",
            "Mac"
        ],
        "toolType": [
            "Command-line tool"
        ],
        "topic": [
            {
                "term": "Sequence analysis",
                "uri": "http://edamontology.org/topic_0080"
            }
        ]
    },
    "publication": [
        {
            "abstract": "Â© The Author 2015. Published by Oxford University Press. Motivation: Post-sequencing DNA analysis typically consists of read mapping followed by variant calling. Especially for whole genome sequencing, this computational step is very time-consuming, even when using multithreading on a multi-core machine. Results: We present Halvade, a framework that enables sequencing pipelines to be executed in parallel on a multi-node and/or multi-core compute infrastructure in a highly efficient manner. As an example, a DNA sequencing analysis pipeline for variant calling has been implemented according to the GATK Best Practices recommendations, supporting both whole genome and whole exome sequencing. Using a 15-node computer cluster with 360 CPU cores in total, Halvade processes the NA12878 dataset (human, 100bp paired-end reads, 50x coverage) in <3h with very high parallel efficiency. Even on a single, multi-core machine, Halvade attains a significant speedup compared with running the individual tools with multithreading.",
            "authors": [
                "Decap D.",
                "Reumers J.",
                "Herzeel C.",
                "Costanza P.",
                "Fostier J."
            ],
            "cit_count": 32,
            "doi": "10.1093/bioinformatics/btv179",
            "journal": "Bioinformatics",
            "title": "Halvade: Scalable sequence analysis with mapReduce",
            "type": "Primary",
            "year": "2015-01-01"
        }
    ],
    "summary": {
        "biotoolsCURIE": "biotools:halvade",
        "biotoolsID": "halvade",
        "description": "A mapreduce implementation of the best practice DNA-seq pipeline by Broad Institute.",
        "homepage": "http://bioinformatics.intec.ugent.be/halvade",
        "name": "Halvade",
        "version": [
            "1"
        ]
    }
}