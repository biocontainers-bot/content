
{
    "credit": [
        {
            "name": "Eileen Choe",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Jen Shin",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Mihir Samdarshi",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Anindita Varshneya",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Nicole A. Anguiano",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Britain J. Southwick",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "email": "dondi@lmu.edu",
            "name": "John David N. Dionisio",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Kam D. Dahlquist",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Ben G. Fitzpatrick",
            "typeEntity": "Person",
            "typeRoles": [
                "Developer"
            ]
        },
        {
            "name": "Loyola Marymount University",
            "typeEntity": "Institute",
            "typeRoles": [
                "Provider"
            ]
        },
        {
            "name": "NSF award 0921038; LMU Rains Research Assistant Program; LMU Summer Undergraduate Research Program",
            "typeEntity": "Funding agency",
            "typeRoles": [
                "Contributor"
            ]
        },
        {
            "name": "lmu.edu",
            "typeEntity": "Institute",
            "typeRoles": [
                "Provider"
            ]
        },
        {
            "email": "kdahlquist@lmu.edu",
            "name": "Kam D. Dahlquist",
            "typeRoles": [
                "Support"
            ]
        },
        {
            "email": "kdahlquist@lmu.edu",
            "name": "Kam D. Dahlquist",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ]
        },
        {
            "email": "dondi@lmu.edu",
            "name": "John David N. Dionisio",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ]
        }
    ],
    "documentation": [
        {
            "type": "General",
            "url": "http://dondi.github.io/GRNsight/documentation.html"
        }
    ],
    "download": [
        {
            "type": "Source code",
            "url": "https://github.com/dondi/GRNsight/archive/master.zip"
        }
    ],
    "function": [
        {
            "note": "GRNsight automatically lays out a network graph based on an Excel input spreadsheet containing an adjacency matrix where regulators are named in the columns and target genes in the rows. When a user uploads a spreadsheet with an unweighted adjacency matrix, GRNsight automatically lays out the graph using black lines and pointed arrowheads.  When a user uploads a spreadsheet with a weighted adjacency matrix, GRNsight uses pointed and blunt arrowheads, and colors the edges and adjusts their thicknesses based on the sign (positive for activation or negative for repression) and magnitude of the weight parameter. Nodes are rectangular and support gene labels of up to 12 characters.  The edges are arcs, which become straight lines when the nodes are close together.  Self-regulatory edges are indicated by a loop on the lower-right side of a node. Visualizations can be modified by sliders that adjust D3.js's force graph layout parameters and through manual node dragging.",
            "operation": [
                {
                    "term": "Gene regulatory network analysis",
                    "uri": "http://edamontology.org/operation_1781"
                },
                {
                    "term": "Pathway or network visualisation",
                    "uri": "http://edamontology.org/operation_3083"
                }
            ]
        }
    ],
    "labels": {
        "cost": "Free of charge",
        "language": [
            "JavaScript"
        ],
        "license": "BSD-3-Clause",
        "maturity": "Mature",
        "operatingSystem": [
            "Linux",
            "Windows",
            "Mac"
        ],
        "toolType": [
            "Web application"
        ],
        "topic": [
            {
                "term": "Molecular interactions, pathways and networks",
                "uri": "http://edamontology.org/topic_0602"
            },
            {
                "term": "Gene regulation",
                "uri": "http://edamontology.org/topic_0204"
            }
        ]
    },
    "link": [
        {
            "type": "Repository",
            "url": "https://github.com/dondi/GRNsight"
        }
    ],
    "publication": [
        {
            "abstract": "Â© 2016 Dahlquist et al. GRNsight is a web application and service for visualizing models of gene regulatory networks (GRNs). A gene regulatory network (GRN) consists of genes, transcription factors, and the regulatory connections between them which govern the level of expression of mRNA and protein from genes. The original motivation came from our efforts to perform parameter estimation and forward simulation of the dynamics of a differential equations model of a small GRN with 21 nodes and 31 edges. We wanted a quick and easy way to visualize the weight parameters from the model which represent the direction and magnitude of the influence of a transcription factor on its target gene, so we created GRNsight. GRNsight automatically lays out either an unweighted or weighted network graph based on an Excel spreadsheet containing an adjacency matrix where regulators are named in the columns and target genes in the rows, a Simple Interaction Format (SIF) text file, or a GraphML XML file. When a user uploads an input file specifying an unweighted network, GRNsight automatically lays out the graph using black lines and pointed arrowheads. For a weighted network, GRNsight uses pointed and blunt arrowheads, and colors the edges and adjusts their thicknesses based on the sign (positive for activation or negative for repression) and magnitude of the weight parameter. GRNsight is written in JavaScript, with diagrams facilitated by D3.js, a data visualization library. Node.js and the Express framework handle server-side functions. GRNsight's diagrams are based on D3.js's force graph layout algorithm, which was then extensively customized to support the specific needs of GRNs. Nodes are rectangular and support gene labels of up to 12 characters. The edges are arcs, which become straight lines when the nodes are close together. Self-regulatory edges are indicated by a loop. When a user mouses over an edge, the numerical value of the weight parameter is displayed. Visualizations can be modified by sliders that adjust the force graph layout parameters and through manual node dragging. GRNsight is best-suited for visualizing networks of fewer than 35 nodes and 70 edges, although it accepts networks of up to 75 nodes or 150 edges. GRNsight has general applicability for displaying any small, unweighted or weighted network with directed edges for systems biology or other application domains. GRNsight serves as an example of following and teaching best practices for scientific computing and complying with FAIR principles, using an open and test-driven development model with rigorous documentation of requirements and issues on GitHub. An exhaustive unit testing framework using Mocha and the Chai assertion library consists of around 160 automated unit tests that examine nearly 530 test files to ensure that the program is running as expected. The GRNsight application (http://dondi.github.io/GRNsight/) and code (https://github.com/dondi/GRNsight) are available under the open source BSD license.",
            "authors": [
                "Dahlquist K.D.",
                "Dionisio J.N.",
                "Fitzpatrick B.G.",
                "Anguiano N.A.",
                "Varshneya A.",
                "Southwick B.J.",
                "Samdarshi M."
            ],
            "cit_count": 1,
            "doi": "10.7717/peerj-cs.85",
            "journal": "PeerJ",
            "title": "GRNsight: A web application and service for visualizing models of small- to medium-scale gene regulatory networks",
            "type": "Primary",
            "year": "2016-01-01"
        },
        {
            "doi": "10.5281/zenodo.1287498",
            "type": "Other"
        }
    ],
    "summary": {
        "biotoolsCURIE": "biotools:grnsight",
        "biotoolsID": "grnsight",
        "description": "Web application and service for visualizing small- to medium-scale models of gene regulatory networks. It automatically lays out either an unweighted or weighted network graph based on an Excel input spreadsheet containing an adjacency matrix where regulators are named in the columns and target genes in the rows. It is best-suited for visualizing networks of fewer than 35 nodes and 70 edges and has general applicability.",
        "homepage": "http://dondi.github.io/GRNsight/",
        "name": "GRNsight",
        "version": [
            "4.0.0"
        ]
    }
}