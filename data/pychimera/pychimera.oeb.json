
{
    "credit": [
        {
            "email": "jaime.rodriguezguerra@uab.cat",
            "name": "Jaime Rodríguez-Guerra Pedregal",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ]
        },
        {
            "email": "jeandidier.marechal@uab.cat",
            "name": "Jean-Didier Maréchal",
            "typeEntity": "Person",
            "typeRoles": [
                "Primary contact"
            ]
        }
    ],
    "documentation": [
        {
            "type": "General",
            "url": "https://github.com/insilichem/pychimera"
        }
    ],
    "function": [
        {
            "operation": [
                {
                    "term": "Service invocation",
                    "uri": "http://edamontology.org/operation_3763"
                }
            ]
        }
    ],
    "labels": {
        "language": [
            "C++",
            "Python"
        ],
        "license": "LGPL-3.0",
        "operatingSystem": [
            "Linux"
        ],
        "toolType": [
            "Web API"
        ],
        "topic": [
            {
                "term": "Structural biology",
                "uri": "http://edamontology.org/topic_1317"
            },
            {
                "term": "Computational chemistry",
                "uri": "http://edamontology.org/topic_3332"
            },
            {
                "term": "Data visualisation",
                "uri": "http://edamontology.org/topic_0092"
            }
        ]
    },
    "publication": [
        {
            "abstract": "© The Author(s) 2018. Published by Oxford University Press. All rights reserved. Motivation UCSF Chimera is a powerful visualization tool remarkably present in the computational chemistry and structural biology communities. Built on a C++ core wrapped under a Python 2.7 environment, one could expect to easily import UCSF Chimera's arsenal of resources in custom scripts or software projects. Nonetheless, this is not readily possible if the script is not executed within UCSF Chimera due to the isolation of the platform. UCSF ChimeraX, successor to the original Chimera, partially solves the problem but yet major upgrades need to be undergone so that this updated version can offer all UCSF Chimera features. Results PyChimera has been developed to overcome these limitations and provide access to the UCSF Chimera codebase from any Python 2.7 interpreter, including interactive programming with tools like IPython and Jupyter Notebooks, making it easier to use with additional third-party software. Availability and implementation PyChimera is LGPL-licensed and available at https://github.com/insilichem/pychimera.",
            "authors": [
                "Rodriguez-Guerra Pedregal J.",
                "Marechal J.-D."
            ],
            "cit_count": 1,
            "doi": "10.1093/bioinformatics/bty021",
            "journal": "Bioinformatics",
            "title": "PyChimera: Use UCSF Chimera modules in any Python 2.7 project",
            "year": "2018-05-15"
        }
    ],
    "summary": {
        "biotoolsCURIE": "biotools:pychimera",
        "biotoolsID": "pychimera",
        "description": "Use UCSF Chimera Python API in a standard interpreter.",
        "homepage": "https://github.com/insilichem/pychimera",
        "name": "PyChimera"
    }
}